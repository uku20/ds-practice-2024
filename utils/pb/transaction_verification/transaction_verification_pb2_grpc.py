# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import transaction_verification_pb2 as transaction__verification__pb2


class TransactionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.VerifyTransaction = channel.unary_unary(
                '/transaction.TransactionService/VerifyTransaction',
                request_serializer=transaction__verification__pb2.VerificationRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.VerificationResponse.FromString,
                )


class TransactionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def VerifyTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransactionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'VerifyTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyTransaction,
                    request_deserializer=transaction__verification__pb2.VerificationRequest.FromString,
                    response_serializer=transaction__verification__pb2.VerificationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'transaction.TransactionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TransactionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def VerifyTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionService/VerifyTransaction',
            transaction__verification__pb2.VerificationRequest.SerializeToString,
            transaction__verification__pb2.VerificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OrderItemServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OrderItemTransaction = channel.unary_unary(
                '/transaction.OrderItemService/OrderItemTransaction',
                request_serializer=transaction__verification__pb2.OrderItemRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.OrderItemResponse.FromString,
                )


class OrderItemServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def OrderItemTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderItemServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OrderItemTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.OrderItemTransaction,
                    request_deserializer=transaction__verification__pb2.OrderItemRequest.FromString,
                    response_serializer=transaction__verification__pb2.OrderItemResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'transaction.OrderItemService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderItemService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def OrderItemTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.OrderItemService/OrderItemTransaction',
            transaction__verification__pb2.OrderItemRequest.SerializeToString,
            transaction__verification__pb2.OrderItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserDataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UserDataTransaction = channel.unary_unary(
                '/transaction.UserDataService/UserDataTransaction',
                request_serializer=transaction__verification__pb2.UserDataRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.UserDataResponse.FromString,
                )


class UserDataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UserDataTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserDataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UserDataTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.UserDataTransaction,
                    request_deserializer=transaction__verification__pb2.UserDataRequest.FromString,
                    response_serializer=transaction__verification__pb2.UserDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'transaction.UserDataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserDataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UserDataTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.UserDataService/UserDataTransaction',
            transaction__verification__pb2.UserDataRequest.SerializeToString,
            transaction__verification__pb2.UserDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class YourServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ClearData = channel.unary_unary(
                '/transaction.YourService/ClearData',
                request_serializer=transaction__verification__pb2.ClearDataRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class YourServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ClearData(self, request, context):
        """Existing rpc methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_YourServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ClearData': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearData,
                    request_deserializer=transaction__verification__pb2.ClearDataRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'transaction.YourService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class YourService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ClearData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.YourService/ClearData',
            transaction__verification__pb2.ClearDataRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
